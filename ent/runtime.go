// Code generated by ent, DO NOT EDIT.

package ent

import (
	"mall/ent/cartitem"
	"mall/ent/item"
	"mall/ent/order"
	"mall/ent/orderitem"
	"mall/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	cartitemFields := schema.CartItem{}.Fields()
	_ = cartitemFields
	// cartitemDescQuantity is the schema descriptor for quantity field.
	cartitemDescQuantity := cartitemFields[0].Descriptor()
	// cartitem.DefaultQuantity holds the default value on creation for the quantity field.
	cartitem.DefaultQuantity = cartitemDescQuantity.Default.(int)
	// cartitem.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	cartitem.QuantityValidator = cartitemDescQuantity.Validators[0].(func(int) error)
	itemFields := schema.Item{}.Fields()
	_ = itemFields
	// itemDescStock is the schema descriptor for stock field.
	itemDescStock := itemFields[4].Descriptor()
	// item.DefaultStock holds the default value on creation for the stock field.
	item.DefaultStock = itemDescStock.Default.(int)
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescAddress is the schema descriptor for address field.
	orderDescAddress := orderFields[0].Descriptor()
	// order.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	order.AddressValidator = orderDescAddress.Validators[0].(func(string) error)
	orderitemFields := schema.OrderItem{}.Fields()
	_ = orderitemFields
	// orderitemDescQuantity is the schema descriptor for quantity field.
	orderitemDescQuantity := orderitemFields[0].Descriptor()
	// orderitem.DefaultQuantity holds the default value on creation for the quantity field.
	orderitem.DefaultQuantity = orderitemDescQuantity.Default.(int)
	// orderitem.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	orderitem.QuantityValidator = orderitemDescQuantity.Validators[0].(func(int) error)
	// orderitemDescPrice is the schema descriptor for price field.
	orderitemDescPrice := orderitemFields[1].Descriptor()
	// orderitem.PriceValidator is a validator for the "price" field. It is called by the builders before save.
	orderitem.PriceValidator = orderitemDescPrice.Validators[0].(func(float32) error)
	paymentFields := schema.Payment{}.Fields()
	_ = paymentFields
}
